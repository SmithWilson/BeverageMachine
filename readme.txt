Бекенд:

Серверная часть разработана на asp net core 3.1. Для работы с базой данных использовал orm entityframework core. Работа с данными реализована по принципу cqrs, для разделения операций чтения/записи, переиспользования и более гибкого подхода к разработке. За вызов запросов и команд отвечает MediatR. После получения запроса в контроллере и базовой проверки параметров через фильтр ModelStateValidationFilter MediatR пушит запрос/команду в нашу шину обработки. Затем за работу с базой данными отвечает обертка EfProvider. Все преобразования из моделей в dto выполняются через AutoMapper, конфигурация которого расположена в файле - tools/AutoMapperProfile.cs.

За работу с изображениями отвечает ImageProvider, который загружает изображение на сервер в wwwroot/files, задает изображению guid и возвращает обратно uri. Так же имеет возможность удаления изображения с сервера.

Бекенд отвечает за все операции с автоматом (добавление монет в автомат(клиенты/администраторы), покупку напитков, выдача сдачи. Доступ в административную часть реализована через проверку секретного ключа с клиента с ключом с AccessCodes.resx. Если ключ верен, то продолжается загрузка первоначальных данных для админ панели, в ином случае идет перенаправление на пользовательский интерфейс.

Фронт:

Клиентскую часть реализовывал на Angular2, для интерфейса применял Angular Material.
Чтобы попасть в админ панель необходимо перейти по данному пути - http://localhost:4200/admin/ и добавить ключ безопастности - secret_key, таким образом получим http://localhost:4200/admin/secret_key.

Для оповещения пользователя про события в автомате использовал SnackBar.

Клиентский код можно еще улучшить подробив на отдельные компоненты верстку (пример: компонент напитков - drink-card), вынеся стили в файл *.component.css, описанием моделей сущностей и dto.


Дополнительные задания:
1) Реализовал покупку нескольких напитков перед получением сдачи, путем создания кнопки "Получить сдачу", до этого момента пользователь может совершать покупки на внесенные средства.
2) Не реализовал импорт напитков в систему. Самый оптимальный и быстрый вариант импорта в систему:
а) импорт изображений в систему, получение uri (можно автоматизировать для группы изображений)
б) подстановка uri в строки напитков
в) создание csv файла и прогрузка в базу через bulk-запрос

Спасибо за уделенное внимание!

